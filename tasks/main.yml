---

- name: create mattermost local directories
  become: true
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
  with_items:
    - "{{ mattermost_postgres_data_location }}"
    - "{{ mattermost_app_conf_location }}"
    - "{{ mattermost_push_proxy_conf_location }}"

- name: create mattermost app local directories
  become: true
  file:
    owner: 2000
    path: "{{ item }}"
    state: directory
    recurse: true
  with_items:
    - "{{ mattermost_app_data_location }}"
    - "{{ mattermost_app_logs_location }}"
    - "{{ mattermost_plugins_location }}"

- name: create a secrets file
  become: true
  copy:
    force: false
    content: "{}"
    dest: "{{ mattermost_secrets_file_location }}"
    mode: 0600

- name: slurp secret file
  become: true
  slurp:
    src: "{{ mattermost_secrets_file_location }}"
  register: slurped_secrets

- set_fact:
   secrets_json: "{{ slurped_secrets['content'] | b64decode | from_json }}"

- name: enrich secrets
  set_fact:
      secrets_json: "{{ secrets_json | combine( {item: lookup('password', '/dev/null length=48 chars=ascii_letters,digits') } ) }}"
  when: secrets_json[item] is undefined
  with_items:
    - "EmailSettings_InviteSalt"
    - "FileSettings_PublicLinkSalt"
    - "PostgresPassword"

- name: dump secrets file
  become: true
  copy:
    content: "{{ secrets_json | to_nice_json }}"
    dest: "{{ mattermost_secrets_file_location }}"
    mode: 0600

- name: create app configuration
  become: true
  template:
    src: "config.json.j2"
    dest: "{{ mattermost_app_conf_location }}/config.json"
  notify: restart app

- name: create push proxy configuration
  become: true
  template:
    src: "mattermost-push-proxy.json.j2"
    dest: "{{ mattermost_push_proxy_conf_location }}/mattermost-push-proxy.json"
  notify: restart push proxy

- import_tasks: run_container.yml
